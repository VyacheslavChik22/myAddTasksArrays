import java.util.Arrays;

public class myAddTasksArrays {

    public static void main(String[] args) {
/* Задание 5:
Создайте матрицу 3х3 (двумерный массив типа int). Заполните единицами обе диагонали матрицы и напечатайте ее в консоль.
Постарайтесь заполнить обе диагонали в одном цикле.
 */
        int[][] matrix = {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}; // три строки и три столбца.

        for (int[] row : matrix) { // идем по строкам
            for (int column : row) { // идем по столбцам
                System.out.print(column + " ");
            }
            System.out.println(); //Переносим строки для визуального отображения таблицы
        }


        System.out.println();
 /* Задание 6
Нам дан массив чисел: {5, 4, 3, 2, 1}
Необходимо привести его к виду: {1, 2, 3, 4, 5}
Решите задачу с использованием дополнительного массива.
  */
        int[] thither = {7, 4, 3, 5, 1};
        int[] back = new int[thither.length]; // создаем массив, равный по длине первому

        System.out.println(Arrays.toString(thither));

        for (int i = 0; i < thither.length; i++) {
            back[i] = thither[(thither.length - 1) - i]; // Переносим значения элементов из одного массива в другой

        }
        thither = back;
        System.out.println(Arrays.toString(thither));


        System.out.println();
 /* Задание 7
Решите предыдущее задание, но без использования дополнительного массива.
Необходимо добиться того, чтобы исходный массив полностью соответствовал второму массиву из прошлого задания.
Выведите результат программы в консоль тем же способом.
 */
        int[] arr = {5, 8, 2, 3, 9};
        System.out.println(Arrays.toString(arr));

        for (int i = 0; i < arr.length / 2; i++) { // делим длину массива пополам

            int container = arr[i];                // объявляем переменную хранящуюю значения первой половины элементов массива
            arr[i] = arr[arr.length - i - 1];         // Заменяем первую часть элементов массива на вторую
            arr[arr.length - i - 1] = container;      // Заменяем вторую часть элементов на первую.

        }
        System.out.println(Arrays.toString(arr));


        System.out.println();
/* Задание 8
Дан массив чисел {-6, 2, 5, -8, 8, 10, 4, -7, 12, 1}
Необходимо найти два числа, сумма которых равна -2.
Напечатать эти числа в консоль.
 */
        int[] arrSumTwo = {-6, 2, 5, -8, 10, 4, -7, 12, 1};
        Arrays.sort(arrSumTwo);           // Сортируем массив
        int h = 0;                        // Переменная индекс первого элемента массива
        int k = arrSumTwo.length - 1;     // Переменная кол-ва индексов массива
        while (h < k) {                   // Пока соблюдается условие то...
            if (arrSumTwo[h] + arrSumTwo[k] > -2) { // если сумма первого и последнего элементов м-ва > -2
                k--;                                // то переходим к предпоследнему элементу м-ва
                continue;
            } else if (arrSumTwo[h] + arrSumTwo[k] < -2) { // если сумма первого и последнего элементов м-ва < -2
                h++;                                      // то переходим ко второму элементу м-ва
                continue;
            } else {                  //сумма первого и последнего элементов м-ва == -2
                System.out.println(arrSumTwo[h] + " and " + arrSumTwo[k]); // выводим числа в консоль
                break;                                                     // прекращаем вывод
            }
        }


        System.out.println();
/*
Усложняем предыдущую задачу. Найдите все пары чисел, сумма которых равна ?2. Напечатайте их в консоль.
 */
        int[] arrNum = {-6, 2, 5, -8, 10, 4, -7, 12, 1};


        for (int i = 0; i < arrNum.length; i++) {                 //проходим массив двумя циклами
            for (int j = 0; j < arrNum.length; j++) {
                if (j != i && (arrNum[i] + arrNum[j]) == -2) { //ставим условие при которых сумма двух элементов массива == -2
                    System.out.println(arrNum[i] + " and " + arrNum[j]); // выводим все пары в консоль
                }
            }

        }

    }

}



